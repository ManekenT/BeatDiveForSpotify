{"version":3,"sources":["lib/util.js","components/components.js","components/App.js","components/accountLabel/accountLabel.js","components/header/header.js","reportWebVitals.js","index.js"],"names":["parseStateString","string","state","split","id","type","e","React","createElement","spotifyApi","SpotifyWebApi","Default","props","LoginAppeal","className","onClick","authorize","BlockerInfo","Track","track","trackId","getTrack","this","error","console","log","setState","ContentHeader","title","name","images","album","contentType","Component","imageElement","src","url","Fragment","authCode","fragmentArgs","queryArgs","AccountLabel","me","getMe","display_name","Header","loadSong","loadAlbum","loadArtist","loadPlaylist","authCookie","App","stateObject","window","addEventListener","preventDefault","processDroppedContent","dataTransfer","getData","all","location","hash","replace","args","forEach","keyvalue","kv","key","util","search","expireTime","Date","getTime","Cookies","set","expires","loadContent","href","origin","get","setAccessToken","content","loadCurrentSong","loadCurrentArtist","loadUser","loadCurrentUser","loadCurrentPlaylist","loadCurrentAlbum","stateString","handleApiError","status","remove","droppedContent","urlPart","slice","infoPart","length","startsWith","artistId","albumId","userId","playlistId","getMyCurrentPlayingTrack","item","artists","context","external_urls","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f662e7a.chunk.js","sourcesContent":["\nconst keys = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\nconst modes = [\"Minor\", \"Major\"];\n\nexport const parseFragment = () => {\n    var hash = window.location.hash.replace(/#/g, '');\n    var all = hash.split('&');\n    var args = {};\n    all.forEach(function (keyvalue) {\n        var kv = keyvalue.split('=');\n        var key = kv[0];\n        args[key] = kv[1];\n    });\n    return args;\n}\n\nexport const parseQuery = () => {\n    var hash = window.location.search.replace(/\\?/g, '');\n    var all = hash.split('&');\n    var args = {};\n    all.forEach(function (keyvalue) {\n        var kv = keyvalue.split('=');\n        var key = kv[0];\n        args[key] = kv[1];\n    });\n    return args;\n}\n\nexport const msToDuration = (ms) => {\n    var i = Math.floor(ms / 1000);\n    var seconds = i % 60;\n    var minutes = (i - seconds) / 60;\n    if (seconds < 10) {\n        return \"\" + minutes + \":0\" + seconds;\n    }\n    return \"\" + minutes + \":\" + seconds;\n}\n\nexport const getExplicit = (explicit) => {\n    if (explicit) {\n        return \"Yes\";\n    }\n    return \"No\";\n}\n\nexport const parseStateString = (string) => {\n    var state = string.split('_');\n    return {\n        id: state[0],\n        type: state[1]\n    }\n}","import React from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nconst e = React.createElement;\nconst spotifyApi = new SpotifyWebApi();\n\nexport function Default(props) {\n    return e('div', {\n        id: 'defaultContent'\n    }, 'Drag and drop a Spotify link over here. Artist, user, song, playlist or album!');\n}\n\nexport function LoginAppeal(props) {\n    return e('div', {\n        className: 'overlay'\n    },\n        e('div', {\n            className: 'item'\n        }, 'Please authorize this site with spotify. It doesn\\'t really make sense without access to the Spotify Api.'),\n        e('button', {\n            className: 'item',\n            id: 'authorizeButton',\n            onClick: props.authorize\n        }, 'Authorize')\n    );\n}\n\nexport function BlockerInfo() {\n    return e('div', {\n        className: 'overlay'\n    },\n        e('div', {},\n            'Something is blocking requests to the spotify api. Please allow this site to access ',\n            e('div', {\n                className: 'markedText'\n            }, 'api.spotify.com'),\n            ' and refresh the page. Thanks!'\n        )\n    );\n}\n\nexport function Artist(props) {\n    return e(React.Fragment, {},\n        e(ContentHeader, {\n            title: props.name,\n            images: props.images,\n            contentType: 'Artist'\n        }),\n\n        e(GenreTags, {\n            genres: props.genres\n        }),\n        e(ArtistPopularity, {\n            popularity: props.popularity,\n            followers: props.followers\n        }),\n        e('div', { className: 'seperator' }),\n        e('h2', {}, 'top tracks'),\n        e(Tracklist, {\n            tracks: props.tracks\n        }),\n        e('div', { className: 'seperator' }),\n        e('h2', {}, 'spotify recommendations'),\n        e(TrackCollectionWithImages, {\n            tracks: props.recommendations\n        }),\n        e('div', { className: 'seperator' }),\n        e('h2', {}, 'artist links'),\n        e(Links, {\n            urls: props.urls\n        }),\n        e('div', { className: 'seperator' })\n    );\n}\n\nexport class Track extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { track: '' };\n        this.trackId = props.id;\n    }\n\n    componentDidMount() {\n        spotifyApi.getTrack(this.trackId, {}, (error, track) => {\n            if (error) {\n                console.log();\n                //return handleApiError(error);\n            }\n            this.setState({\n                track: track\n            });\n        });\n    }\n\n    render() {\n        if (this.state.track !== '') {\n            return <ContentHeader\n                title={this.state.track.name} images={this.state.track.album.images} contentType='Track'\n            />;\n        } else {\n            return null;\n        }\n    }\n}\n\nexport function Playlist(props) {\n    return e(ContentHeader, {\n        title: props.name,\n        images: props.images,\n        contentType: 'Playlist'\n    });\n}\n\nexport function User(props) {\n    return e(ContentHeader, {\n        title: props.name,\n        images: props.images,\n        contentType: 'User'\n    });\n}\n\nexport function Album(props) {\n    return e(React.Fragment, {},\n        e(ContentHeader, {\n            title: props.name,\n            images: props.images,\n            contentType: 'Album'\n        }),\n        e(AlbumGeneralInfo, {\n            type: props.type,\n            artists: props.artists\n        }),\n        e('div', { className: 'sectionItem' }, `Released ${props.releaseDate} on ${props.label}`),\n        e(GenreTags, {\n            genres: props.genres\n        }),\n        e(AlbumPopularity, {\n            popularity: props.popularity,\n            followers: props.followers\n        }),\n        e('div', { className: 'seperator' }),\n        e('h2', {}, 'tracks'),\n        e(Tracklist, {\n            tracks: props.tracks\n        }),\n        e('div', { className: 'seperator' }),\n        e('h2', {}, 'spotify recommendations'),\n        e(TrackCollectionWithImages, {\n            tracks: props.recommendations\n        }),\n        e('div', { className: 'seperator' }),\n        e('h2', {}, 'business info'),\n        e(Copyright, {\n            copyrights: props.copyrights\n        }),\n        e(Ids, {\n            ids: props.ids\n        }),\n        e('div', { className: 'sectionItem' }, props.markets),\n        e('div', { className: 'seperator' }),\n        e('h2', {}, 'artist links'),\n        e(Links, {\n            urls: props.urls\n        }),\n        e('div', { className: 'seperator' })\n    );\n}\n\nexport function ContentHeader(props) {\n    if (props.images[0]) {\n        var imageElement = e('img', {\n            className: 'titleImage item',\n            src: props.images[0].url\n        })\n    }\n    return e(React.Fragment, {},\n        e('div', {\n            id: 'contentType',\n        }, props.contentType),\n        e('div', {\n            className: 'title'\n        },\n            imageElement,\n            e('h1', {\n                className: 'titleText item'\n            }, props.title)\n        )\n    );\n}\n\nexport function Links(props) {\n    var urlComponents = [];\n    for (var key in props.urls) {\n        var value = props.urls[key];\n        urlComponents.push(e('a', {\n            href: value,\n            key: key\n        }, key));\n    }\n    return e(React.Fragment, {}, urlComponents);\n}\n\nexport function Copyright(props) {\n    var copyrightComponents = [];\n    props.copyrights.forEach((object) => {\n        if (object.type === 'C') {\n            copyrightComponents.push(e('div', {\n                key: 'C'\n            }, `© ${object.text}`));\n        } else if (object.type === 'P') {\n            copyrightComponents.push(e('div', {\n                key: 'P'\n            }, `℗ ${object.text}`));\n        }\n    });\n    return e('div', { className: 'sectionItem' }, copyrightComponents);\n}\n\nexport function Ids(props) {\n    var idComponents = [];\n    for (var key in props.ids) {\n        var value = props.ids[key];\n        idComponents.push(e('div', {\n            key: key\n        }, `${key}: ${value}`));\n    }\n    return e('div', { className: 'sectionItem' }, idComponents);\n}\n\nexport function ArtistPopularity(props) {\n    return e('div', {\n        id: 'popularityLabel',\n        className: 'sectionItem'\n    },\n        e('div', {}, `${props.followers} followers and`),\n        e(ProgressBar, {\n            value: props.popularity\n        }),\n        e('div', {}, 'popularity')\n    );\n}\n\nexport function AlbumPopularity(props) {\n    return e('div', {\n        id: 'popularityLabel',\n        className: 'sectionItem'\n    },\n        e(ProgressBar, {\n            value: props.popularity\n        }),\n        e('div', {}, 'popularity')\n    );\n}\n\nexport function AlbumGeneralInfo(props) {\n    var typeText = 'A';\n    if (props.type === 'album') {\n        typeText += 'n';\n    }\n    typeText += ` ${props.type} by `;\n    var artistNames = [];\n    props.artists.forEach((artist) => {\n        artistNames.push(artist.name)\n    });\n    typeText += artistNames.join(', ');\n    return e('div', { className: 'sectionItem' }, typeText);\n}\n\nexport function ProgressBar(props) {\n    return e('div', {\n        className: 'progressBar',\n    },\n        e('span', {\n            className: 'progressBarValue',\n            style: {\n                width: `${props.value}%`\n            }\n        }, `${props.value}%`)\n    );\n}\n\nexport function GenreTags(props) {\n    if (props.genres.length === 0) {\n        return null;\n    }\n    var genreTagComponents = [];\n    for (var key in props.genres) {\n        var value = props.genres[key];\n        genreTagComponents.push(e('div', {\n            className: 'tag item',\n            key: key\n        }, value));\n    }\n    return e('div', {\n        className: 'tagContainer sectionItem'\n    }, genreTagComponents);\n}\n\nexport function TrackCollectionWithImages(props) {\n    var trackComponents = [];\n    for (var key in props.tracks) {\n        var value = props.tracks[key];\n        trackComponents.push(e('div', {\n            className: 'trackLabel item',\n            key: key\n        },\n            e('img', {\n                className: 'trackImage',\n                src: value.album.images[0].url,\n            }),\n            e('div', {\n                className: 'item'\n            }, value.name)));\n    }\n    return e('div', {\n        className: 'trackCollection sectionItem'\n    }, trackComponents);\n}\n\nexport function Tracklist(props) {\n    var trackComponents = [];\n    for (var key in props.tracks) {\n        var value = props.tracks[key];\n        var index = Object.keys(props.tracks).indexOf(key)\n        trackComponents.push(e('div', {\n            className: 'item',\n            key: key\n        }, `${index + 1}. ${value.name}`));\n    }\n    return e('div', {\n        className: 'tracklist sectionItem'\n    }, trackComponents);\n}","import * as util from '../lib/util';\nimport { Artist, Playlist, Track, Default, User, Album, LoginAppeal, BlockerInfo } from './components'\nimport Header from './header/header';\nimport Cookies from 'js-cookie'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport './App.css';\n\nconst spotifyApi = new SpotifyWebApi();\nconst clientId = '003e1f0c81d54149b97761a80f6a7270';\nconst userScopes = 'user-read-currently-playing';\nconst authCookie = 'authCode';\nvar authCode;\nvar fragmentArgs;\nvar queryArgs;\n\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { type: 'default', id: '' };\n\n        console.log(this.state);\n\n        window.addEventListener(\"dragover\", function (e) {\n            e.preventDefault();\n        }, false);\n        window.addEventListener(\"drop\", function (e) {\n            e.preventDefault();\n            processDroppedContent(e.dataTransfer.getData(\"text\"));\n        }, false);\n\n        // URL Argumente parsen\n        fragmentArgs = util.parseFragment();\n        queryArgs = util.parseQuery();\n        var stateObject;\n\n        if (fragmentArgs['access_token']) {\n            // Es ist der erste Pageload nach der Authentifizierung\n            authCode = fragmentArgs['access_token'];\n            var expireTime = fragmentArgs['expires_in'];\n            expireTime = new Date(new Date().getTime() + (expireTime - 60) * 1000);\n            Cookies.set(authCookie, authCode, {\n                expires: expireTime\n            });\n            if (fragmentArgs['state']) {\n                stateObject = util.parseStateString(fragmentArgs['state']);\n                loadContent(stateObject.id, stateObject.type)\n            } else {\n                window.location.href = window.location.origin\n            }\n        } else if (queryArgs['error']) {\n            // Erster Pageload nach unvollständiger Auth\n            return React.createElement(LoginAppeal, { authorize: authorize });\n        }\n\n\n        if (Cookies.get(authCookie)) {\n            authCode = Cookies.get(authCookie);\n            // Der User hat einen AuthToken, der vermeintlich noch gültig ist\n            console.log('Spotify Authentication Code:' + authCode);\n            spotifyApi.setAccessToken(authCode);\n        } else {\n            // Erster Pageload, Login ermöglichen\n            //authorize();\n        }\n\n        // Content zur ID laden\n        if (queryArgs['id'] && queryArgs['type']) {\n            this.state.id = queryArgs['id'];\n            this.state.type = queryArgs['type'];\n        } else if (fragmentArgs['state']) {\n            stateObject = util.parseStateString(fragmentArgs['state']);\n            this.state.id = stateObject.id;\n            this.state.type = stateObject.type;\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        console.log(this.state.type);\n        var content;\n        if (this.state.type === 'default') {\n            content = <Default />;\n        } else if (this.state.type === 'track') {\n            content = <Track id={this.state.id} />\n        }\n        return <div>\n            <Header\n                loadSong={loadCurrentSong}\n                loadArtist={loadCurrentArtist}\n                loadUser={loadCurrentUser}\n                loadPlaylist={loadCurrentPlaylist}\n                loadAlbum={loadCurrentAlbum}\n                authorize={authorize} />\n            {content}\n        </div>;\n    }\n\n}\n\nexport default App;\n\nfunction authorize() {\n    var stateString = '';\n    if (queryArgs['id'] && queryArgs['type']) {\n        stateString = '&state=' + queryArgs['id'] + '_' + queryArgs['type'];\n    } else if (queryArgs['state']) {\n        stateString = '&state=' + queryArgs['state'];\n    }\n    window.location.href = \"https://accounts.spotify.com/authorize?client_id=\" + clientId + \"&redirect_uri=\" + window.location.origin + \"&response_type=token&scope=\" + userScopes + stateString;\n}\n\nfunction handleApiError(error) {\n    if (error.status === 401) {\n        // Auth Code is not valid anymore\n        Cookies.remove(authCookie);\n        authorize();\n    } else if (error.status === 0) {\n        // Some plugin is blocking access to the spotify api\n        return React.createElement(BlockerInfo, {});\n    } else {\n        console.error(error);\n    }\n}\n\nfunction processDroppedContent(droppedContent) {\n    var urlPart = droppedContent.slice(0, 25);\n    if (urlPart !== 'https://open.spotify.com/') {\n        console.log('Not a valid spotify url: ' + urlPart);\n        return;\n    }\n    var infoPart = droppedContent.slice(25, droppedContent.length);\n    if (infoPart.startsWith('artist')) {\n        var artistId = infoPart.slice(7, infoPart.length);\n        console.log('Dropped artist id: ' + artistId);\n        loadContent(artistId, 'artist');\n    } else if (infoPart.startsWith('track')) {\n        var trackId = infoPart.slice(6, infoPart.length);\n        console.log('Dropped track id: ' + trackId);\n        loadContent(trackId, 'track');\n    } else if (infoPart.startsWith('album')) {\n        var albumId = infoPart.slice(6, infoPart.length);\n        console.log('Dropped album id: ' + albumId);\n        loadContent(albumId, 'album');\n    } else if (infoPart.startsWith('user')) {\n        var userId = infoPart.slice(5, infoPart.length);\n        console.log('Dropped user id: ' + userId);\n        loadContent(userId, 'user');\n    } else if (infoPart.startsWith('playlist')) {\n        var playlistId = infoPart.slice(9, infoPart.length);\n        console.log('Dropped playlist id: ' + playlistId);\n        loadContent(playlistId, 'playlist');\n    }\n}\n\nfunction processArtist(id) {\n    spotifyApi.getArtist(id, {}, (error1, artist) => {\n        spotifyApi.getArtistTopTracks(id, 'from_token', {}, (error2, tracks) => {\n            spotifyApi.getRecommendations({\n                seed_artists: id\n            }, (error3, recommendations) => {\n                if (error1) {\n                    handleApiError(error1);\n                } else if (error2) {\n                    handleApiError(error2);\n                } else if (error3) {\n                    handleApiError(error3);\n                } else {\n                    // TODO related artists\n                    return React.createElement(Artist, {\n                        name: artist.name,\n                        images: artist.images,\n                        urls: artist.external_urls,\n                        followers: artist.followers.total,\n                        genres: artist.genres,\n                        popularity: artist.popularity,\n                        tracks: tracks.tracks,\n                        recommendations: recommendations.tracks\n                    });\n                }\n            });\n        });\n    });\n}\n\nfunction processPlaylist(id) {\n    spotifyApi.getPlaylist(id, {}, (error, playlist) => {\n        if (error) {\n            handleApiError(error)\n            return;\n        }\n        ReactDOM.render(React.createElement(Playlist, {\n            name: playlist.name,\n            images: playlist.images,\n        }), document.getElementById('contentContainer'));\n    });\n}\n\nfunction processUser(id) {\n    spotifyApi.getUser(id, {}, (error, user) => {\n        if (error) {\n            handleApiError(error)\n            return;\n        }\n        return React.createElement(User, {\n            name: user.display_name,\n            images: user.images,\n        });\n    });\n}\n\nfunction processAlbum(id) {\n    spotifyApi.getAlbum(id, {}, (error1, album) => {\n        spotifyApi.getAlbumTracks(id, {\n            limit: 50\n        }, (error, albumTracks) => {\n            var randomSongs = [];\n            for (var i = 0; i < 5; i++) {\n                randomSongs[i] = albumTracks.items[Math.floor(Math.random() * albumTracks.items.length)].id;\n            }\n            var songArg = randomSongs.join(\",\");\n            spotifyApi.getRecommendations({\n                seed_tracks: songArg\n            }, (error2, recommendations) => {\n                if (error1) {\n                    handleApiError(error1)\n                } else if (error2) {\n                    handleApiError(error2);\n                } else {\n                    console.log(albumTracks.items);\n                    ReactDOM.render(React.createElement(Album, {\n                        name: album.name,\n                        images: album.images,\n                        genres: album.genres,\n                        type: album.album_type,\n                        artists: album.artists,\n                        markets: album.available_markets,\n                        label: album.label,\n                        popularity: album.popularity,\n                        releaseDate: album.release_date,\n                        releaseDatePrecision: album.release_date_precision,\n                        tracks: albumTracks.items,\n                        recommendations: recommendations.tracks,\n                        copyrights: album.copyrights,\n                        ids: album.external_ids,\n                        urls: album.external_urls\n                    }), document.getElementById('contentContainer'));\n                }\n            })\n        });\n    });\n}\n\nexport function loadCurrentSong() {\n    console.log('Loading song');\n    spotifyApi.getMyCurrentPlayingTrack({}, (error, track) => {\n        if (error) {\n            handleApiError(error)\n            return;\n        }\n        if (track.item) {\n            loadContent(track.item.id, 'track');\n        }\n    })\n}\n\nexport function loadCurrentAlbum() {\n    spotifyApi.getMyCurrentPlayingTrack({}, (error, track) => {\n        if (error) {\n            handleApiError(error)\n            return;\n        }\n        if (track.item) {\n            loadContent(track.item.album.id, 'album');\n        }\n    })\n}\n\nexport function loadCurrentArtist() {\n    spotifyApi.getMyCurrentPlayingTrack({}, (error, track) => {\n        if (error) {\n            handleApiError(error)\n            return;\n        }\n        if (track.item) {\n            loadContent(track.item.artists[0].id, 'artist');\n        }\n    })\n}\n\nexport function loadCurrentPlaylist() {\n    spotifyApi.getMyCurrentPlayingTrack({}, (error, track) => {\n        if (error) {\n            handleApiError(error)\n            return;\n        }\n        if (track.context && track.context.type === 'playlist') {\n            processDroppedContent(track.context.external_urls['spotify']);\n        }\n    })\n}\n\nexport function loadCurrentUser() {\n    spotifyApi.getMe({}, (error, user) => {\n        if (error) {\n            handleApiError(error)\n            return;\n        }\n        loadContent(user.id, 'user');\n    })\n}\n\nfunction loadContent(id, type) {\n    window.location.href = window.location.origin + '?id=' + id + '&type=' + type;\n}\n","import SpotifyWebApi from 'spotify-web-api-js';\r\nimport React from 'react';\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nexport class AccountLabel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { me: '' };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"mounted image\");\r\n        spotifyApi.getMe({},\r\n            (error, me) => {\r\n                if (error) {\r\n                    //handleApiError(error);\r\n                } else {\r\n                    this.setState({\r\n                        me: me\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.me !== '') {\r\n            console.log(this.state.me);\r\n            return <div id=\"accountLabel\">\r\n                <img id=\"accountImage\" src={this.state.me.images[0].url} />\r\n                <div id=\"accountName\">{this.state.me.display_name}</div>\r\n            </div>\r\n        } else {\r\n            return <button className=\"item\" onClick={this.props.authorize}>Authorize</button>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AccountLabel;","import './header.css';\r\nimport React from 'react';\r\nimport AccountLabel from '../accountLabel/accountLabel';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return <div id=\"header\">\r\n            <div id=\"logoText\" className=\"item\">BeatDive for Spotify</div>\r\n            <div>load current:</div>\r\n            <button className='headerButton item' onClick={this.props.loadSong} >song</button>\r\n            <button className='headerButton item' onClick={this.props.loadAlbum} >album</button>\r\n            <button className='headerButton item' onClick={this.props.loadArtist} >artist</button>\r\n            <button className='headerButton item' onClick={this.props.loadPlaylist} >playlist</button>\r\n            <AccountLabel authorize={this.props.authorize} />\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Header;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}